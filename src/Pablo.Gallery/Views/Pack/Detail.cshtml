@using System.Web.Configuration
@model Pablo.Gallery.Models.Pack
@{
    ViewBag.Title = "Pack " + Model.Name + " by " + (Model.Group != null ? Model.Group.Name : "Unknown Group");
    ViewBag.PreviewImageUrl = Request.Url.Scheme + System.Uri.SchemeDelimiter + Request.Url.Host + Url.Content(Model.PreviewUrl(maxWidth: 320));
}

@section SecondaryHeader {
    <h2>@Html.ActionLink(Model.Date.Value.Year.ToString(), "Index", "Pack", new { year = Model.Date.Value.Year }, null)\@Model.Name</h2>
    <div class="monthInfo"></div>
    <div class="groupInfo"></div>
    <p>
        <a href="@Url.Content(Model.DownloadUrl())">Download Pack</a>
    </p>
}
<ul id="result" class="files"></ul>
<div id="loading">Loading...</div>

@section Scripts {
    @Scripts.Render("~/Scripts/masonry.pkgd.js")
    <script id="month-template" type="text/x-jsrender">
        <label for="month">Month: </label>
        <span class="view">
            <span class="basicMeta"><a href="#">{{monthName:month}}</a></span>
            (@if (Request.IsAuthenticated) {<text><a href="#" class="edit">Edit</a></text>} else {<text>@Html.ActionLink("Log in to edit", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</text>})
        </span>
        <span class="edit">
            <select id="month">
                <option value="1" {{if month ==1}}selected{{/if}}>January</option>
                <option value="2" {{if month==2}}selected{{/if}}>February</option>
                <option value="3" {{if month==3}}selected{{/if}}>March</option>
                <option value="4" {{if month==4}}selected{{/if}}>April</option>
                <option value="5" {{if month==5}}selected{{/if}}>May</option>
                <option value="6" {{if month==6}}selected{{/if}}>June</option>
                <option value="7" {{if month==7}}selected{{/if}}>July</option>
                <option value="8" {{if month==8}}selected{{/if}}>August</option>
                <option value="9" {{if month==9}}selected{{/if}}>September</option>
                <option value="10" {{if month==10}}selected{{/if}}>October</option>
                <option value="11" {{if month==11}}selected{{/if}}>November</option>
                <option value="12" {{if month==12}}selected{{/if}}>December</option>
            </select>
        </span>
    </script>
    <script id="file-template" type="text/x-jsrender">
        <li class="file">
            <a href="@Url.RootUrl(){{attr:url}}" class="thumbs" data-img="@Url.RootUrl(){{attr:displayUrl}}" data-type="{{attr:displayType}}" data-download="@Url.RootUrl(){{attr:downloadUrl}}">
                <span class="file-image">
                    <img src="@Url.RootUrl(){{attr:previewUrl}}" {{if previewheight}}height="{{attr:previewHeight}}" {{/if}} {{if previewWidth}}width="{{attr:previewWidth}}"{{/if}} />
                </span>
                <span class="file-name">{{>fileName}}</span>
            </a>
        </li>
    </script>
    <script>
        $(function () {
            $('#result').pageloader({
                url: "@Url.RouteUrl("api", new {httproute = "", Controller = "Pack", id = Model.Name})",
                template: "#file-template",
                loading: "#loading",
                selector: function (data) { return data.files; },
                onComplete: function () {
                    var msnry = new Masonry('.files', {});
                }
            });

            $.views.converters("monthName", function (val) {
                var monthNames = ["January", "February", "March", "April", "May", "June",
  "July", "August", "September", "October", "November", "December"
                ];
                return monthNames[val - 1];
            });

            $(".monthInfo").on("change", "#month", function () {
                var update = new Object();
                // update.month = new Object();
                update.month = $(this).val();
                $.ajax({
                    url: "@Url.RouteUrl("api", new {httproute = "", Controller = "Pack", id = Model.Name })",
                    dataType: 'json',
                    type: 'PUT',
                    data: update

                }).done(function() {
                    $(".monthInfo").find(".view").show();
                    $(".monthInfo").find("span.edit").hide();
                });
            });

            @if (Convert.ToBoolean(WebConfigurationManager.AppSettings["EnableGallery"]))
            {
                <text>

            $('#result').gallery({
                images: 'a.thumbs',
                rel: 'thumbs',
                loadMore: function (finished) {
                    $('#result').pageloader('load', finished);
                }
            });
            </text>
            }
        });
    </script>

    <script id="group-template" type="text/x-jsrender">
        <label for="groups">Group: </label>
        <span class="view">
            <ul class="list">
                {{if group}}
                <li class="group">
                    <a href="@Url.RootUrl(){{:group.url}}">{{:group.name}}</a>
                </li>
                {{else}}
                <li class="group">
                    <a>Unknown</a>
                </li>
                {{/if}}
            </ul>
            (@if (Request.IsAuthenticated) {<text><a href="#" class="edit">Edit</a></text>} else {<text>@Html.ActionLink("Log in to edit", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</text>})
        </span>
        <span class="edit">
            <input type="hidden" class="groups" id="groups" data-groups="{{:~json(groups)}}" />
        </span>


    </script>

    <script>
        var template = $.templates("#group-template");
        $(function () {
            $(".monthInfo").pageloader({
                url: '@Url.RouteUrl("api", new { httproute = "", Controller = "Pack", id = Model.Name})',
                template: "#month-template",
                loading: "#loading",
                selector: function(data) { return data; },
                enableScroll: false
        });

            $(".groupInfo").pageloader({
                url: '@Url.RouteUrl("api", new {httproute = "", Controller = "Pack", id = Model.Name})',
                template: "#group-template",
                loading: "#loading",
                selector: function (data) { return data; },
                enableScroll: false,
                onComplete: function () {
                    $(".groups").select2({
                        placeholder: "Select the group",
                        minimumInputLength: 1,
                        initSelection: function (element, callback) {
                            var data = [];
                            data.groups = $(element).data("groups");
                            callback(data);
                        },
                        //query: function(query) {
                        //    var data = { results: [] };
                        //    data.results.push({ text: query.term, id: query.term });
                        //    query.callback(data);
                        //},
                        createSearchChoice: function (term, data) {
                            if ($(data).filter(function () { return this.text.localeCompare(term) === 0; }).length === 0) {
                                return { id: term, text: term }
                            }
                        },
                        ajax: {
                            url: "@Url.RouteUrl("api", new {httproute = "", Controller = "Group"})",
                            dataType: 'json',
                            type: 'GET',
                            data: function (term, page) {
                                return {
                                    query: term,
                                    // size: 10
                                };
                            },
                            results: function (data, page) {
                                return {
                                    results: $.map(data.groups, function (item) {
                                        return {
                                            text: item.name,
                                            slug: item.slug,
                                            id: item.name
                                        }
                                    })
                                };
                            }
                        }
                    });

                }
            });

            $(".groupInfo").on("change", function (e) {
                var update = new Object();
                update.group = new Object();
                if (e.added) {
                    update.group.name = e.added.id;
                    $.ajax({
                        url: "@Url.RouteUrl("apipath", new {httproute = "", Controller = "Pack", id = @Model.Name})",
                        data: update,
                        type: 'PUT',
                        success: function (data) {
                            $(".groupInfo").html($.templates("#group-template").render(data));
                        }
                    });
                } else if (e.removed) {
                    update.group.name = e.removed.id;
                    $.ajax({
                        url: "@Url.RouteUrl("apipath", new {httproute = "", Controller = "Pack", id = @Model.Name})",
                        data: update,
                        type: 'DELETE',
                        success: function (data) {
                            $(".groupInfo").html($.templates("#group-template").render(data));
                        }

                    });
                }
                // Update the "view" rendered content
                var data = [];
                $(e.val).each(function () {
                    data.push({ id: this, text: this });
                });
                $(".groupInfo").html($.templates("#group-template").render(data));
            });

            $(".monthInfo").on("click", "a.edit", function(e) {
                $(this).parents(".monthInfo").find("span.edit").show();
                $(this).parents(".view").hide();

            });

            // Show tag editor when "Edit" is clicked
            $(".groupInfo").on("click", "a.edit", function (e) {
                $(this).parents(".groupInfo").find("span.edit").show();
                $(this).parents(".view").hide();
            });

            // Hide tag editor when user clicks out of select2
            $(".groupInfo").on("select2-blur", ".groups", function (e) {
                $(this).parents(".groupInfo").find(".view").show();
                $(this).parents(".groupInfo").find("span.edit").hide();
            });

        });

        function stringify(value) {
            return JSON.stringify(value);
        }

        $.views.helpers({ json: stringify });
    </script>

}







